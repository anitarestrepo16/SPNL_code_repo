library(tidyverse)
library(readxl)
vars_to_keep = c("RSA", "RMSSD")
# save current directory
files_dir <- paste0(getwd(), '/Mindware Compilers/HRV_data/')
# obtain the HRV excel file names from the "HRV_data" folder
files = list(list.files(files_dir))
for(file in files){
id = str_replace(file, ".xlsx", "")
df = read_excel(paste0(files_dir, file)) %>%
filter(`Segment Number` %in% vars_to_keep)
df2 = as_tibble(t(df))[2:nrow(df2), ]
names(df2) = vars_to_keep
df2$Segment = c(seq(1, nrow(df2)))
df2$id = id
}
# save current directory
files_dir <- paste0(getwd(), '/HRV_data/')
# obtain the HRV excel file names from the "HRV_data" folder
files = list(list.files(files_dir))
for(file in files){
id = str_replace(file, ".xlsx", "")
df = read_excel(paste0(files_dir, file)) %>%
filter(`Segment Number` %in% vars_to_keep)
df2 = as_tibble(t(df))[2:nrow(df2), ]
names(df2) = vars_to_keep
df2$Segment = c(seq(1, nrow(df2)))
df2$id = id
}
View(df)
View(files)
View(files)
id = str_replace(files[1], ".xlsx", "")
df = read_excel(paste0(files_dir, files[1]))
View(df)
df = read_excel(paste0(files_dir, files[1])) %>%
filter(`Segment Number` %in% vars_to_keep)
View(df)
df2 = as_tibble(t(df))[2:nrow(df2), ]
df2 = as_tibble(t(df))[2:nrow(df), ]
View(df2)
View(df)
t(df)
shape(t(df))
nrow(t(df))
df2 = as_tibble(t(df))[2:(nrow(t(df)) - 1), ]
df2 = as_tibble(t(df))[2:(nrow(t(df))), ]
for(file in files){
id = str_replace(file, ".xlsx", "")
df = read_excel(paste0(files_dir, file)) %>%
filter(`Segment Number` %in% vars_to_keep)
df2 = as_tibble(t(df))[2:nrow(t(df)), ]
names(df2) = vars_to_keep
df2$Segment = c(seq(1, nrow(df2)))
df2$id = id
}
View(df2)
?tibble()
vars_to_keep
vars_to_keep + "blah"
c(vars_to_keep, "blah")
# extract data for each excel file
df_out <- tibble()
names(df_out) <- c(vars_to_keep, "Segment", "id")
# extract data for each excel file
df_out <- tibble(1:4)
View(df_out)
# extract data for each excel file
df_out <- tibble(matrix(ncol = 4))
names(df_out) <- c(vars_to_keep, "Segment", "id")
# extract data for each excel file
df_out <- tibble(matrix(ncol = 4, nrow = 0))
matrix(ncol = 4, nrow = 0)
# extract data for each excel file
df_out <- tibble(matrix(ncol = 4, nrow = 0))
names(df_out) <- c(vars_to_keep, "Segment", "id")
# extract data for each excel file
df_out <- tibble(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
View(df_out)
View(df_out)
# extract data for each excel file
df_out <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
View(df_out)
compile <- function(directory = get_wd(), vars_to_keep) {
# obtain the excel file names
files = list(list.files(files_dir))
# extract data for each excel file
df_out <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
for(file in files){
# save file name as id
id <- str_replace(file, ".xlsx", "")
# read in the file
df <- read_excel(paste0(directory, file)) %>%
# keep only relevant variables
filter(`Segment Number` %in% vars_to_keep)
# transpose the df
df2 <- as_tibble(t(df))[2:nrow(t(df)), ]
# change column names
names(df2) <- vars_to_keep
# add a column for segment number
df2$Segment <- c(seq(1, nrow(df2)))
# add id column
df2$id <- id
# append the subject data to the final df
df_out = rbind(df_out, df2)
}
return(df_out)
}
test <- compile(c("RSA", "RMSSD"))
test <- compile(vars_to_keep = c("RSA", "RMSSD"))
compile <- function(directory = getwd(), vars_to_keep) {
# obtain the excel file names
files = list(list.files(files_dir))
# extract data for each excel file
df_out <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
for(file in files){
# save file name as id
id <- str_replace(file, ".xlsx", "")
# read in the file
df <- read_excel(paste0(directory, file)) %>%
# keep only relevant variables
filter(`Segment Number` %in% vars_to_keep)
# transpose the df
df2 <- as_tibble(t(df))[2:nrow(t(df)), ]
# change column names
names(df2) <- vars_to_keep
# add a column for segment number
df2$Segment <- c(seq(1, nrow(df2)))
# add id column
df2$id <- id
# append the subject data to the final df
df_out = rbind(df_out, df2)
}
return(df_out)
}
test <- compile(vars_to_keep = c("RSA", "RMSSD"))
compile <- function(directory = paste0(getwd(), "/"), vars_to_keep) {
# obtain the excel file names
files = list(list.files(files_dir))
# extract data for each excel file
df_out <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
for(file in files){
# save file name as id
id <- str_replace(file, ".xlsx", "")
# read in the file
df <- read_excel(paste0(directory, file)) %>%
# keep only relevant variables
filter(`Segment Number` %in% vars_to_keep)
# transpose the df
df2 <- as_tibble(t(df))[2:nrow(t(df)), ]
# change column names
names(df2) <- vars_to_keep
# add a column for segment number
df2$Segment <- c(seq(1, nrow(df2)))
# add id column
df2$id <- id
# append the subject data to the final df
df_out = rbind(df_out, df2)
}
return(df_out)
}
test <- compile(vars_to_keep = c("RSA", "RMSSD"))
compile <- function(directory = paste0(getwd(), "/"), vars_to_keep) {
# obtain the excel file names
files = list(list.files(files_dir))
# extract data for each excel file
df_out <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_out) <- c(vars_to_keep, "Segment", "id")
for(file in files){
# save file name as id
id <- str_replace(file, ".xlsx", "")
# read in the file
df <- read_excel(paste0(directory, file)) %>%
# keep only relevant variables
filter(`Segment Number` %in% vars_to_keep)
# transpose the df
df2 <- as_tibble(t(df))[2:nrow(t(df)), ]
# change column names
names(df2) <- vars_to_keep
# add a column for segment number
df2$Segment <- c(seq(1, nrow(df2)))
# add id column
df2$id <- id
# append the subject data to the final df
df_out = rbind(df_out, df2)
}
return(df_out)
}
test <- compile(vars_to_keep = c("RSA", "RMSSD"))
View(test)
source(HRV_compiler)
source("HRV_compiler")
source("HRV_compiler.R")
source("HRV_compiler.R")
full_data_df <- compile()
getwd()
getwd()
compile()
source("HRV_compiler.R")
source("HRV_compiler.R")
full_data_df <- compile()
source("HRV_compiler.R")
full_data_df <- compile()
?list.files
source("HRV_compiler.R")
full_data_df <- compile()
View(full_data_df)
full_data_df <- compile(directory = paste0(getwd(), "/HRV_data"), vars_to_keep = c("RSA", "RMSSD", "Mean IBI"))
source("HRV_compiler.R")
full_data_df <- compile(directory = paste0(getwd(), "/HRV_data"), vars_to_keep = c("RSA", "RMSSD", "Mean IBI"))
source("HRV_compiler.R")
full_data_df <- compile(directory = paste0(getwd(), "/HRV_data"), vars_to_keep = c("RSA", "RMSSD", "Mean IBI"))
View(full_data_df)
full_data_df <- compile(directory = paste0(getwd(), "/HRV_data"), vars_to_keep = c("RSA", "RMSSD", "Mean IBI"))
source("HRV_compiler.R")
full_data_df <- compile(directory = paste0(getwd(), "/HRV_data"), vars_to_keep = c("RSA", "RMSSD", "Mean IBI"))
View(full_data_df)
write_csv(full_data_df, "full_data_df.csv")
knitr::opts_chunk$set(echo = TRUE)
source("../HRV_compiler_3.1.5.R")
df <- compile(vars_to_keep = c("Segment Number", "RSA", "Mean Heart Rate"))
source("../HRV_compiler.R")
df <- compile(vars_to_keep = c("Segment Number", "RSA", "Mean Heart Rate"))
View(df)
df <- compile(vars_to_keep = c("RSA", "Mean Heart Rate"))
View(df)
source("../HRV_compiler.R")
df <- compile(vars_to_keep = c("RSA", "Mean Heart Rate"))
View(df)
vars_to_keep <- c("RSA", "Mean Heart Rate")
df_out <- data.frame(matrix(ncol = (length(vars_to_keep) + 2), nrow = 0))
View(df_out)
colnames(df_out) <- c(vars_to_keep, "Segment", "filename")
View(df_out)
getwd()
tst <- read_excel(paste0(getwd(), "/kelly_test/71397_1_HRV Analysis_3_43_24 PM_clean.xlsx"))
View(tst)
tst %>% filter(`Segment Number` %in% vars_to_keep)
View(tst)
t(tst)
tst <- tst %>% filter(`Segment Number` %in% vars_to_keep)
t(tst)
as_tibble(t(tst))
?as_tibble
as_tibble(t(tst))[1,]
source("../HRV_compiler.R")
df <- compile(vars_to_keep = c("RSA", "Mean Heart Rate"))
View(df)
df <- compile(vars_to_keep = c("Mean Heart Rate", "RSA"))
View(df)
df <- compile(vars_to_keep = c("Mean IBI", "RSA"))
View(df)
df <- compile(vars_to_keep = c("RSA", "Mean IBI"))
View(df)
df <- compile(vars_to_keep = c("Respiration Rate", "Mean IBI"))
View(df)
source("../HRV_compiler_3.1.5.R")
df <- compile(directory = "3.1.5", vars_to_keep = c("Respiration Rate", "Mean IBI"))
View(df)
View(df)
View(df)
View(df_out)
View(tst)
tst <- read_excel(paste0(getwd(), "/kelly_test/71397_1_HRV Analysis_3_43_24 PM_clean.xlsx"))
tst <- read_excel(paste0(getwd(), "/kelly_test/3.1.5/105_bsl_0_HRV Analysis_1_05_42 PM.xlsx"))
View(tst)
table(tst$Version)
tst$Version
tst[tst$Version == `Segment Number`]
tst["Version"]
tst[tst["Version"] == `Segment Number`, ]
tst[tst$Version == "Segment Number"]
tst[tst$Version == "Segment Number", ]
tst[tst$Version == "Segment Number", :]
tst[tst$Version == "Segment Number", ]
tst[c(tst$Version == "Segment Number"), ]
tst[4: tst$Version == "Segment Number", ]
tst[tst$Version == "Segment Number", ]
poop <- tst[tst$Version == "Segment Number", ]
View(poop)
poop <- tst[(tst$Version == "Segment Number"), ]
poop <- tst[c(tst$Version == "Segment Number"), ]
poop <- tst[tst$Version == "Segment Number":nrow(tst), ]
poop <- tst[!is.na(tst$Version), ]
poop2 <- poop[poop$Version == "Segment Number"]
poop2 <- poop[poop$Version == "Segment Number", ]
View(poop2)
poop2 <- poop[poop$Version == "Segment Number":nrow(poop2), ]
poop2 <- poop[index(poop$Version == "Segment Number"), ]
row_number()
?row_number
relevant_vars <- tst$Version["Segment Time":]
relevant_vars <- tst$Version
relevant_vars["Segment Time"]
row(tst$Version)
row(tst)
rownames(tst)
rownames(tst[tst$Version == "Segment Number"])
rownames(tst[tst$Version == "Segment Number",])
rownames(poop[poop$Version == "Segment Number",])
which(rownames(tst == "Segment Number"))
for (txt in tst$Version){}
